[{"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/index.js":"1","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/App.js":"2","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Signup.js":"3","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/context/AuthContext.js":"4","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/firebase.js":"5","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Dashboard.js":"6","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Login.js":"7","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/PrivateRoute.js":"8","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/ForgotPassord.js":"9","/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/UpdateProfile.js":"10"},{"size":278,"mtime":1607056423150,"results":"11","hashOfConfig":"12"},{"size":1386,"mtime":1608245919403,"results":"13","hashOfConfig":"12"},{"size":2527,"mtime":1607118688758,"results":"14","hashOfConfig":"12"},{"size":1460,"mtime":1607184911841,"results":"15","hashOfConfig":"12"},{"size":515,"mtime":1607112348532,"results":"16","hashOfConfig":"12"},{"size":1281,"mtime":1607185370376,"results":"17","hashOfConfig":"12"},{"size":2203,"mtime":1607195392075,"results":"18","hashOfConfig":"12"},{"size":477,"mtime":1607183710872,"results":"19","hashOfConfig":"12"},{"size":2087,"mtime":1607184324809,"results":"20","hashOfConfig":"12"},{"size":3040,"mtime":1607185326469,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cll5z2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/index.js",[],["44","45"],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/App.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Signup.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/context/AuthContext.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/firebase.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Dashboard.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/Login.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/PrivateRoute.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/ForgotPassord.js",[],"/Users/matiaspenas/webdeveloper/treedevs/react-auth-firebase/src/components/UpdateProfile.js",["46","47"],"import {useRef, useState} from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth, updatePassword, updateEmail } from '../context/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst UpdateProfile = () => {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const { updateEmail, updatePassword, currentUser } = useAuth();\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState('');\n    const history = useHistory();\n    \n    function handleSubmit(e) {\n        \n        e.preventDefault();\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwords do not match.')\n        }\n        \n        const promises = []\n        setError('');\n        setLoading(true);\n        if (emailRef.current.value !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value));\n        }\n        if(passwordRef.current.value) {\n            promises.push(updatePassword(passwordRef.current.value));\n        }\n        \n        Promise.all(promises).then(() => {\n            history.push('/')\n        }).catch(() => {\n            setError('Failed to update account');\n        }).finally(() => {\n            setLoading(false);\n        })\n        \n    }\n\n    return(\n        <div>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\n                    {currentUser && currentUser.email}\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>    \n                            <Form.Control type=\"email\" ref={emailRef} required\n                            defaultValue={currentUser.email}></Form.Control>\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>    \n                            <Form.Control type=\"password\" ref={passwordRef}\n                            placeholder=\"Leave blank to keep the same\"></Form.Control>\n                        </Form.Group>\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>    \n                            <Form.Control type=\"password\" ref={passwordConfirmRef} \n                            placeholder=\"Leave blank to keep the same\"></Form.Control>\n                        </Form.Group>\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">Update </Button>\n                    </Form>\n                </Card.Body>\n                \n                \n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Link to=\"/dashboard\">Cancel</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default UpdateProfile;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":19,"nodeType":"54","messageId":"55","endLine":3,"endColumn":33},{"ruleId":"52","severity":1,"message":"56","line":3,"column":35,"nodeType":"54","messageId":"55","endLine":3,"endColumn":46},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'updatePassword' is defined but never used.","Identifier","unusedVar","'updateEmail' is defined but never used.","no-global-assign","no-unsafe-negation"]